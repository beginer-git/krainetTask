package org.example.authservice.producer;

import org.example.authservice.config.RabbitConfig;
import org.example.authservice.dto.UserEventDto;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.stereotype.Service;

@Service
public class UserEventProducer {

    private static final Logger log = LoggerFactory.getLogger(UserEventProducer.class);

    private final RabbitTemplate rabbitTemplate;

    public UserEventProducer(RabbitTemplate rabbitTemplate) {
        this.rabbitTemplate = rabbitTemplate;
    }

    public void sendUserEvent(UserEventDto event) {
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è –≤ RabbitMQ
        rabbitTemplate.convertAndSend(
                RabbitConfig.USER_EXCHANGE,
                RabbitConfig.USER_ROUTING_KEY,
                event
        );

        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º enum –≤ —Ä—É—Å—Å–∫–æ–µ —Å–ª–æ–≤–æ
        String actionText = switch (event.getAction()) {
            case CREATED -> "–°–æ–∑–¥–∞–Ω";
            case UPDATED -> "–ò–∑–º–µ–Ω–µ–Ω";
            case DELETED -> "–£–¥–∞–ª–µ–Ω";
        };

        // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–º—ã –∏ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        String subject = String.format("–¢–µ–º–∞: %s –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s", actionText, event.getUsername());

        String body = String.format(
                "–¢–µ–∫—Å—Ç: %s –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∏–º–µ–Ω–µ–º - %s, –ø–∞—Ä–æ–ª–µ–º - %s –∏ –ø–æ—á—Ç–æ–π - %s.",
                actionText,
                event.getUsername(),
                event.getPassword() != null ? event.getPassword() : "N/A",
                event.getEmail(),
                event.getRole() != null ? event.getRole() : "(–Ω–µ —É–∫–∞–∑–∞–Ω)"
        );

        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        log.info("üì§ [EVENT SENT] Exchange='{}', RoutingKey='{}'",
                RabbitConfig.USER_EXCHANGE, RabbitConfig.USER_ROUTING_KEY);
        log.info("üì§ Subject: {}", subject);
        log.info("üì§ Body: {}", body);
        log.debug("üì§ –ü–æ–ª–Ω—ã–π –æ–±—ä–µ–∫—Ç UserEventDto: {}", event);
    }
}
